import os, subprocess,json 
import pandas as pd 
# NUPOS: https://morphadorner.northwestern.edu/documentation/nupos/
def adorn(group): 
    repo = '/Users/amycweng/DH/Early-Modern-Sermons' # github repo 
    os.chdir('/Users/amycweng/DH/morphadorner-2')
    subprocess.run(['./adornplainemetext', f"{repo}/assets/adorned", f"{repo}/assets/plain_body/{group}*.txt"])

if __name__ == "__main__": 
    # with open('../assets/corpora.json','r') as file: 
    #     corpora = json.load(file)
    # era_name = input('Enter subcorpus name: ')
    already_adorned = os.listdir('../assets/adorned')
    already_adorned = {k.split(".txt")[0]:None for k in already_adorned}
    # selected_prefix = input("Enter prefix or All: ")
    # if selected_prefix == "All":
    #     for prefix,tcpIDs in corpora[era_name].items(): 
    #         for tcpID in sorted(tcpIDs): 
    #             if tcpID not in already_adorned: 
    #                 adorn(tcpID)
    # else: 
    #     for tcpID in sorted(corpora[era_name][selected_prefix]):
    #         if tcpID not in already_adorned: 
    #             adorn(tcpID)

    tcpIDs = ['A90514', 'A74686', 'A59072', 'A90266', 'A80049', 'A56369', 'A85657', 'A29218', 'A70812', 'A71259', 'A62543', 'A61710', 'A97125', 'A90689', 'A62379', 'A38705', 'A65628', 'A30167', 'A47489', 'A36270', 'A61300', 'A80854', 'A21042', 'A11802', 'A91743', 'A14985', 'A48778', 'A04214', 'A76457', 'A21269', 'A56744', 'A42057', 'A03779', 'A65563', 'A61711', 'A30238', 'A67406', 'A40091', 'A47098', 'A72989', 'A90059', 'A07457', 'A06749', 'A81140', 'A45658', 'A63847', 'A46806', 'A25423', 'B15202', 'A58345', 'A03427', 'A78903', 'A42445', 'A67821', 'A03343', 'A58347', 'A30945', 'A36449', 'A59930', 'A50243', 'A90701', 'A44544', 'A00448', 'A58810', 'A36887', 'A31656', 'A63676', 'B14334', 'A77788', 'A42733', 'A00514', 'A60586', 'A97126', 'A93340', 'A91543', 'A42096', 'A35578', 'A61129', 'A77987', 'A15864', 'A20161', 'A49464', 'A60948', 'A59893', 'A01346', 'A69777', 'A52087', 'A52905', 'A67000', 'A44801', 'A48949', 'A16834', 'A80842', 'A61470', 'B12340', 'A18831', 'A81235', 'A14992', 'A52051', 'A46742', 'A66486', 'A52045', 'A77762', 'A35545', 'A93382', 'A28272', 'A61882', 'A40680', 'A34868', 'A61699', 'A47892', 'A60356', 'A68078', 'A48431', 'A33915', 'A96832', 'A04388', 'A73882', 'A47528', 'A87720', 'A43776', 'A59048', 'A02702', 'A04367', 'A30997', 'A72540', 'A64336', 'A39743', 'B20731', 'A36855', 'A00459', 'A02266', 'A90062', 'A67398', 'A03839', 'A60346', 'A54949', 'A38139', 'A13551', 'A62380', 'A06160', 'A18606', 'A96995', 'A59114', 'A81219', 'A64281', 'A61474', 'A68336', 'A23647', 'A43819', 'A16830', 'A80847', 'B09956', 'A47465', 'A13752', 'A66124', 'A37425', 'A70791', 'A56742', 'A28288', 'A13550', 'A17044', 'A41202', 'A17722', 'A64135', 'A42680', 'A28303', 'A33723', 'A12706', 'A41438', 'A50253', 'A04602', 'A51159', 'A01020', 'A25828', 'A64860', 'A85863', 'A60145', 'A03390', 'A59934', 'B12557', 'B23007', 'B20532', 'A27583', 'A78093', 'A07647', 'A43763', 'A17324', 'A17330', 'A97256', 'A42331', 'A67833', 'A44967', 'A87092', 'A64335', 'A73885', 'A70803', 'A96362', 'A50251', 'A09442', 'A04166', 'A16210', 'A42899', 'A17683', 'A95864', 'A90897', 'A40888', 'A63923', 'A50480', 'A61649', 'A51205', 'A86549', 'A67012', 'A26728', 'A29369', 'A23644', 'A62625', 'A29368', 'A03581', 'A50132', 'A54354', 'A44635', 'A94158', 'A67563', 'A61853', 'A13209', 'A40889', 'A63895', 'A37208', 'A60350', 'A17696', 'A33720', 'A67417', 'A68730', 'A06764', 'A14374', 'A46354', 'A09443', 'A79832', 'A17127', 'A60152', 'A30995', 'A67173', 'A77360', 'A01553', 'A93757', 'A57067', 'A16985', 'A96106', 'A26809', 'A45376', 'A08276', 'A03445', 'A00819', 'A36367', 'A37045', 'A16935', 'A63825', 'A02571', 'A84072', 'A39295', 'A50223', 'A51840', 'A79909', 'A64958', 'A96264', 'A53104', 'A64970', 'A77703', 'A65313', 'A86088', 'A40434', 'A66395', 'A13078', 'A45558', 'A47367', 'A26955', 'A45564', 'A87802', 'B09729', 'A39120', 'A66424', 'A77501', 'A66418', 'A17587', 'A77514', 'A23637', 'A48928', 'A03281', 'A66425', 'A75459', 'A47399', 'A93876', 'A81255', 'A65306', 'A95963', 'A88701', 'A13535', 'A92765', 'A01092', 'A27055', 'A48486', 'B04185', 'A59548', 'A75934', 'A60487', 'A00415', 'A77845', 'A77851', 'A12763', 'A69886', 'A65716', 'A79459', 'B15275', 'A62910', 'A53273', 'A65925', 'A42432', 'A53271', 'A47576', 'A01523', 'A97227', 'A53265', 'A32857', 'A23769', 'A65714', 'A77847', 'A50546', 'A77853', 'A63826', 'A05221', 'A53926', 'A57598', 'A76218', 'A67467', 'A40635', 'A10994', 'A81727', 'A81900', 'A23806', 'A66396', 'A81243', 'A45567', 'A44679', 'A48725', 'B15303', 'A35043', 'A77502', 'A23635', 'A09977', 'A86505', 'A80160', 'A54872', 'A88931', 'A42786', 'A53674', 'A10995', 'A42751', 'A75710', 'A64635', 'A29912', 'A47013', 'A49758', 'A88104', 'A09432', 'A77477', 'A15580', 'A60137', 'A13873', 'A23768', 'A03335', 'A89018', 'A26837', 'A93722', 'A93044', 'A94071', 'A49589', 'A65063', 'A05967', 'A87227', 'A12980', 'A19625', 'A04112', 'A77856', 'A44244', 'A10173', 'A04847', 'A81871', 'A41499', 'A35318', 'A96538', 'A05350', 'B16394', 'A44442', 'A12604', 'A19037', 'A68802', 'B10040', 'A87384', 'A40817', 'A81905', 'A47413', 'A48734', 'A66393', 'A96712', 'A03292', 'A05191', 'A77507', 'A19590', 'A57199', 'A66436', 'A08488', 'A66423', 'A70241', 'A44682', 'A39669', 'A86299', 'A14710', 'A46730', 'A00003', 'A27494', 'A62876', 'B12497', 'A43674', 'A57167', 'B20800', 'A61628', 'B07515', 'B09510', 'A20648', 'A44443', 'A19036', 'A70902', 'A51847', 'A77116', 'A35325', 'B14421', 'A01094', 'B21317', 'A44245', 'A97021', 'A81131', 'A87226', 'A57577', 'A93904', 'A60132', 'A42350', 'A28823', 'A93723', 'A97221', 'A96103', 'A00607', 'A60681', 'A65074', 'A79475', 'A41317', 'A36821', 'A33971', 'A50232', 'A50540', 'A94264', 'A86660', 'A84922', 'A53908', 'A40784', 'A42018', 'B08803', 'A05347', 'A03078', 'A10010', 'A44441', 'A35535', 'A60508', 'A48723', 'A10574', 'A55028', 'A34429', 'A42583', 'A66353', 'A64551', 'A50192', 'A89195', 'A66352', 'A46900', 'A44124', 'A45548', 'A43663', 'A76800', 'A26951', 'A27497', 'A65459', 'A61617', 'A54653', 'A87379', 'A47613', 'A36940', 'A62256', 'A60455', 'A30262', 'A51878', 'A34038', 'A35326', 'A04845', 'A27044', 'A56656', 'A50541', 'A61950', 'A47029', 'A75925', 'A50233', 'A95609', 'A77854', 'A43515', 'A79474', 'A72253', 'A10398', 'A65061', 'A26158', 'A01281', 'A15579', 'A39911', 'B11957', 'A01529', 'A06520', 'A96682', 'A52818', 'A02785', 'A62059', 'A19399', 'A80547', 'A19616', 'A33955', 'A85403', 'A29925', 'A77859', 'A11458', 'A96523', 'A80396', 'A76372', 'A80157', 'A46702', 'A62878', 'A14736', 'A26784', 'A85013', 'B26714', 'A07776', 'A69044', 'A26753', 'A77252', 'A57197', 'A66404', 'A73009', 'A32041', 'A51257', 'A65694', 'A45544', 'A40428', 'A18125', 'A55582', 'A40819', 'A12187', 'A80426', 'A13528', 'A56699', 'A42834', 'A51848', 'A59582', 'A25887', 'A20733', 'A26342', 'A09376', 'A02551', 'A29529', 'A85833', 'A17389', 'A67685', 'A15575', 'A95349', 'A10341', 'B11965', 'A14669', 'A46649', 'A62099', 'A07198', 'A96871', 'A53708', 'A59557', 'A29098', 'A57234', 'A87565', 'A29932', 'A57546', 'A30250', 'A42017', 'A13264', 'A91515', 'A43321', 'A16485', 'A60249', 'A61631', 'A11881', 'A26793', 'A44880', 'A45546', 'A43137', 'A47437', 'A30126', 'A96093', 'A62112', 'A85979', 'A55782', 'A27472', 'A30669', 'A02181', 'A05188', 'A32724', 'A38590', 'A46728', 'A59608', 'A50162', 'A30696', 'A44665', 'A50176', 'B09905', 'A63741', 'A61630', 'A68172', 'A20650', 'A95982', 'A10817', 'A20718', 'A28344', 'A45802', 'A53906', 'A48315', 'A31403', 'A25462', 'A86493', 'A15576', 'B26662', 'A26816', 'A47542', 'A05759', 'A85175', 'A39926', 'A86326', 'A90544', 'A28624', 'A68214', 'A67899', 'A36368', 'A27259', 'A20536', 'A92145', 'A37274', 'A30241', 'A54894', 'A11462', 'A95762', 'A05417', 'A56715', 'A10740', 'A50402', 'A54857', 'A61620', 'A54843', 'A44488', 'A00584', 'A84684', 'A84690', 'A29102', 'A03927', 'A93663', 'A65863', 'A80637', 'B10277', 'A57806', 'A64572', 'A64566', 'A10581', 'A85799', 'A39660', 'A81299', 'A38556', 'A80811', 'A64229', 'A73033', 'A09760', 'A47369', 'A91061', 'A51251', 'A93662', 'A20641', 'A20655', 'A33601', 'A42952', 'A81919', 'A34191', 'A96530', 'A96524', 'A34032', 'A37261', 'A44502', 'A19639', 'A38422', 'A47584', 'A25467', 'A80742', 'A44072', 'A49230', 'A26805', 'A61596', 'A03475', 'A14653', 'B26659', 'A10353', 'A31404', 'A28627', 'A44931', 'B27584', 'A25459', 'A64834', 'A66979', 'A50213', 'A81890', 'A33777', 'A36169', 'A31174', 'A45805', 'A07203', 'A48500', 'A03717', 'A61804', 'A13538', 'A64968', 'A61623', 'A35266', 'A06874', 'A30450', 'A00593', 'A69531', 'A02804', 'A08483', 'A73031', 'A61409', 'A39663', 'A66401', 'A70263', 'A66415', 'A11845', 'A66429', 'A09950', 'A50164', 'A69915', 'A61391', 'A84686', 'A20642', 'A38031', 'A41519', 'A61193', 'A62277', 'A30243', 'A03851', 'A26347', 'A88692', 'A57569', 'A20939', 'A66978', 'A04482', 'A62049', 'A68202', 'A14861', 'A25470', 'A12551', 'A01539', 'A51440', 'B26664', 'A26804', 'A56406', 'A89716', 'A88420', 'A08552', 'A00668', 'A61282', 'A69147', 'A42498', 'A89500', 'A96434', 'A01006', 'A97070', 'A01012', 'A53973', 'A60407', 'A45687', 'A61862', 'A63907', 'A15107', 'A28292', 'A61679', 'A06190', 'B00565', 'A48758', 'A55721', 'A86579', 'A60956', 'A45240', 'A29365', 'B15342', 'A80849', 'A35016', 'A77231', 'A30609', 'A33300', 'A25204', 'A35017', 'A90497', 'A43817', 'A11162', 'A14032', 'A21260', 'B22909', 'B22921', 'A96596', 'A61678', 'A18436', 'A41543', 'A15106', 'A40891', 'A63912', 'A65556', 'A40098', 'A20744', 'A60406', 'A86197', 'A43546', 'A14350', 'A10650', 'A25358', 'A34527', 'A41635', 'A10320', 'A53569', 'A40515', 'A19474', 'A92321', 'A61281', 'A93771', 'A09868', 'A87089', 'A23717', 'A35175', 'A08586', 'A44571', 'A30582', 'A10134', 'A88635', 'A47044', 'A85305', 'A65568', 'B12016', 'A84147', 'A36905', 'A61685', 'A06193', 'A10929', 'A04790', 'A70011', 'A19272', 'A50114', 'A10242', 'A47454', 'A60955', 'B17542', 'A88580', 'A81214', 'A30811', 'A45242', 'A49444', 'A63050', 'A66100', 'A90696', 'A42854', 'A01979', 'A45685', 'A64139', 'A53965', 'A47737', 'A64688', 'A35389', 'A04154', 'A23716', 'A85853', 'A73848', 'A07105', 'A49242', 'A62955', 'A11011', 'A02723', 'A94741', 'A42475', 'A14155', 'A50529', 'A90725', 'A89274', 'A75965', 'A58149', 'A20794', 'A90902', 'A31666', 'A62570', 'A81199', 'A39399', 'A18357', 'A28280', 'A13558', 'A20637', 'A26905', 'A15471', 'A11603', 'A52074', 'A36257', 'A11824', 'A86580', 'A65815', 'A48777', 'A60951', 'A77593', 'A66111', 'A76316', 'A52288', 'A60548', 'A07538', 'A63914', 'A18356', 'A22141', 'A64128', 'A28336', 'A96433', 'A11789', 'A04390', 'A30035', 'A39777', 'B14661', 'A85659', 'A01559', 'A80721', 'A69197', 'A08541', 'A74688', 'B05977', 'A26870', 'A57737', 'A11012', 'A46638', 'A11006', 'A80045', 'A56403', 'A10442', 'A13822', 'A62017', 'A53745', 'A66098', 'A95662', 'A45133', 'A09463', 'A10132', 'A44577', 'A65552', 'A09488', 'A01956', 'A43344', 'A03760', 'A10046', 'A10734', 'A27173', 'A77988', 'A76466', 'A21258', 'A33648', 'A39365', 'A87104', 'A42264', 'A50112', 'A68300', 'A57682', 'A29348', 'A44826', 'A27364', 'A56589', 'A49318', 'A45536', 'A66106', 'A67218', 'A49697', 'A62374', 'A25771', 'A94353', 'A60588', 'A36889', 'A40089', 'A63888', 'A37598', 'B27727', 'B23227', 'A45132', 'A04608', 'A59269', 'A36453', 'A45330', 'A04378', 'A41142']
    for tcpID in sorted(tcpIDs): 
        if tcpID not in already_adorned: 
            adorn(tcpID)
# DONE: pre_E, E, CW, J1, C1, J2, IR, WM, C2     
# In progress: 1012 re-extracted texts 

# Process: preE, E, J1, CW, C1, J2, IR, WM       
# Sermons: preE, E, J, CW,       
# Citations: preE, E,   

# Roman numerals are sometimes labeled as np (proper noun), e.g., from B31833
#     EZEK	EZEK	np1	EZEK	EZEK	0
#     .	.	.	.	.	1
#     XXII	XXII	np1	XXII	Xxii	0
#     .	.	.	.	.	1
#     XXX.XXXI	XXX.XXXI	np1	XXX.XXXI	XXX.XXXI	0
def bible(): 
    import pandas as pd 
    import sys,re 
    sys.path.append('../')
    data = pd.read_csv("../assets/bible/kjv.csv")
    doc_id = data['doc_id']
    text = data['text']
    plaintext = []
    for idx, d_id in enumerate(doc_id): 
        d_id = d_id.strip(" (KJV)")
        d_id = re.sub(":","-",d_id)
        d_id = "-".join(d_id.split(" "))
        d_id = f"VERSE-{d_id}"
        plaintext.append(f"{d_id} {text[idx]}")

    plaintext = " ".join(plaintext)
    with open("../assets/kjv.txt","w+") as file: 
        file.write(plaintext)

def adornbible(): 
    repo = '/Users/amycweng/DH/Early-Modern-Sermons' # github repo 
    os.chdir('/Users/amycweng/DH/morphadorner-2')
    subprocess.run(['./adornplainemetext', f"{repo}/assets", f"{repo}/assets/kjv.txt"])

# bible()
# adornbible()